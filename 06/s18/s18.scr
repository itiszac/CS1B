Script started on 2020-10-22 20:15:17-07:00 [TERM="xterm-256color" TTY="/dev/pts/0" COLUMNS="80" LINES="24"]
]0;reaper@REAPER: ~/CS1B/06/s18[01;32mreaper@REAPER[00m:[01;34m~/CS1B/06/s18[00m$ make all
g++ -g s18.cpp s18f.o -o s18dbg
]0;reaper@REAPER: ~/CS1B/06/s18[01;32mreaper@REAPER[00m:[01;34m~/CS1B/06/s18[00m$ ls -la
total 120
drwxrwxr-x  2 reaper reaper  4096 Oct 22 20:15 [0m[01;34m.[0m
drwxrwxr-x 11 reaper reaper  4096 Oct 20 20:59 [01;34m..[0m
-rw-rw-r--  1 reaper reaper    46 Oct 20 20:49 hw06.h
-rw-rw-r--  1 reaper reaper   216 Oct 22 20:14 Makefile
-rw-rw-r--  1 reaper reaper   332 Oct 20 20:49 s18.cpp
-rwxrwxr-x  1 reaper reaper 53464 Oct 22 20:15 [01;32ms18dbg[0m
-rw-rw-r--  1 reaper reaper   220 Oct 20 20:49 s18f.cpp
-rw-rw-r--  1 reaper reaper 39336 Oct 22 20:15 s18f.o
-rw-rw-r--  1 reaper reaper     0 Oct 22 20:15 s18.scr
]0;reaper@REAPER: ~/CS1B/06/s18[01;32mreaper@REAPER[00m:[01;34m~/CS1B/06/s18[00m$ d[Kgdb s18dbg 
[35;1m[35;1mGNU gdb [m[35;1m(Ubuntu 9.2-0ubuntu1~20.04) [m[35;1m9.2[m[35;1m
[m[mCopyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from [32ms18dbg[m...
(gdb) list 1,18
1	#include "hw06.h"
2	
3	int main()
4	{
5	  int *d[5], s, i, j, k;
6	  for (i = 0; i < 5; ++i)
7	    d[i] = new int[8];
8	
9	  for (j = 0; j < 5; ++j)
10	    for (k = 0; k < 8; ++k)
11	      *(d[j] + k) = j + k; // o r
12	
13	  s = Sum(d, 5); //d [ j ] [ k]= j+k
14	
15	  std::cout << "s: " << s << std::endl;
16	
17	  for (i = 0; i < 5; ++i)
18	    delete d[i];
(gdb) b 4
Breakpoint 1 at [34m0x1229[m: file [32ms18.cpp[m, line 4.
(gdb) b 13
Breakpoint 2 at [34m0x12b5[m: file [32ms18.cpp[m, line 13.
(gdb) s
The program is not being run.
(gdb) run
Starting program: /home/reaper/CS1B/06/s18/s18dbg 

Breakpoint 1, [33mmain[m () at [32ms18.cpp[m:4
4	{
(gdb) s
6	  for (i = 0; i < 5; ++i)
(gdb) p d
$1 = {[34m0x7ffff7dcffc8[m <[33m__exit_funcs_lock[m>, [34m0x555555555490[m <[33m__libc_csu_init[m>, [m
  [m[34m0x0[m, [34m0x555555555140[m <[33m_start[m>, [34m0x7fffffffdfe0[m}
(gdb) p &d
$2 = (int *(*)[5]) [34m0x7fffffffdec0[m
(gdb) p s
$3 = 21845
(gdb) p &s
$4 = (int *) [34m0x7fffffffdebc[m
(gdb) p i
$5 = 3
(gdb) p &i
$6 = (int *) [34m0x7fffffffdeb0[m
(gdb) p j
$7 = 0
(gdb) p &j
$8 = (int *) [34m0x7fffffffdeb4[m
(gdb) p k
$9 = 1431655645
(gdb) p &k
$10 = (int *) [34m0x7fffffffdeb8[m
(gdb) s
7	    d[i] = new int[8];
(gdb) s
6	  for (i = 0; i < 5; ++i)
(gdb) p d[0]
$11 = (int *) [34m0x55555556aeb0[m
(gdb) s
7	    d[i] = new int[8];
(gdb) s
6	  for (i = 0; i < 5; ++i)
(gdb) s
7	    d[i] = new int[8];
(gdb) continue
Continuing.

Breakpoint 2, [33mmain[m () at [32ms18.cpp[m:13
13	  s = Sum(d, 5); //d [ j ] [ k]= j+k
(gdb) s
[33mSum[m ([36mA[m=0x7fffffffdef0, [36mr[m=0) at [32ms18f.cpp[m:4
4	{
(gdb) list
1	#include "hw06.h"
2	
3	int Sum(int *A[], int r)
4	{
5	  int j, k, sum = 0;
6	  for (j = 0; j < r; ++j)
7	  {
8	    for (k = 0; k < 8; ++k)
9	    {
10	      sum += A[j][k]; // o r
(gdb) b 4
Breakpoint 3 at [34m0x5555555553b1[m: file [32ms18f.cpp[m, line 4.
(gdb) s
5	  int j, k, sum = 0;
(gdb) p A
$12 = (int **) [34m0x7fffffffdec0[m
(gdb) p r
$13 = 5
(gdb) p &r
$14 = (int *) [34m0x7fffffffde84[m
(gdb) p A[0]
$15 = (int *) [34m0x55555556aeb0[m
(gdb) p &A[0]
$16 = (int **) [34m0x7fffffffdec0[m
(gdb) p *A[0]
$17 = 0
(gdb) p *A[1]
$18 = 1
(gdb) s
6	  for (j = 0; j < r; ++j)
(gdb) s
8	    for (k = 0; k < 8; ++k)
(gdb) s
10	      sum += A[j][k]; // o r
(gdb) s
8	    for (k = 0; k < 8; ++k)
(gdb) s
10	      sum += A[j][k]; // o r
(gdb) p sum
$19 = 0
(gdb) p [K[Ks
8	    for (k = 0; k < 8; ++k)
(gdb) s
10	      sum += A[j][k]; // o r
(gdb) s
8	    for (k = 0; k < 8; ++k)
(gdb) p sum
$20 = 3
(gdb) s
10	      sum += A[j][k]; // o r
(gdb) s
8	    for (k = 0; k < 8; ++k)
(gdb) p sum
$21 = 6
(gdb) s
10	      sum += A[j][k]; // o r
(gdb) s
8	    for (k = 0; k < 8; ++k)
(gdb) s
10	      sum += A[j][k]; // o r
(gdb) p sum
$22 = 10
(gdb) s
8	    for (k = 0; k < 8; ++k)
(gdb) s
10	      sum += A[j][k]; // o r
(gdb) p sum
$23 = 15
(gdb) s
8	    for (k = 0; k < 8; ++k)
(gdb) s
10	      sum += A[j][k]; // o r
(gdb) s
8	    for (k = 0; k < 8; ++k)
(gdb) p sum
$24 = 28
(gdb) continue
Continuing.
s: 220
[Inferior 1 (process 57141) exited normally]
(gdb) list
3	int Sum(int *A[], int r)
4	{
5	  int j, k, sum = 0;
6	  for (j = 0; j < r; ++j)
7	  {
8	    for (k = 0; k < 8; ++k)
9	    {
10	      sum += A[j][k]; // o r
11	    }                 // âˆ—(d [ j ]+k )
12	  }
(gdb) s
The program is not being run.
(gdb) quit
]0;reaper@REAPER: ~/CS1B/06/s18[01;32mreaper@REAPER[00m:[01;34m~/CS1B/06/s18[00m$ exit
exit

Script done on 2020-10-22 20:18:06-07:00 [COMMAND_EXIT_CODE="0"]
