Script started on 2020-10-22 19:47:49-07:00 [TERM="xterm-256color" TTY="/dev/pts/0" COLUMNS="80" LINES="24"]
]0;reaper@REAPER: ~/CS1B/06/s15[01;32mreaper@REAPER[00m:[01;34m~/CS1B/06/s15[00m$ gdb s15dbg 
[35;1m[35;1mGNU gdb [m[35;1m(Ubuntu 9.1-0ubuntu1) [m[35;1m9.1[m[35;1m
[m[mCopyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from [32ms15dbg[m...
(gdb) list 1,11
1	#include "hw06.h"
2	
3	int main()
4	{
5	  int d[5] = {1, 2, 3, 4, 5};
6	  int s;
7	  // i n i t i a l i z e d [ ]
8	  s = Sum(d, 5);
9	  std::cout << "s: " << s << std::endl;
10	  return 0;
11	}
(gdb) b 4
Breakpoint 1 at [34m0x11e9[m: file [32ms15.cpp[m, line 4.
(gdb) start
Temporary breakpoint 2 at [34m0x11e9[m: file [32ms15.cpp[m, line 4.
Starting program: /home/reaper/CS1B/06/s15/s15dbg 

Breakpoint 1, [33mmain[m () at [32ms15.cpp[m:4
4	{
(gdb) s
5	  int d[5] = {1, 2, 3, 4, 5};
(gdb) s
8	  s = Sum(d, 5);
(gdb) p d
$1 = {1, 2, 3, 4, 5}
(gdb) p s
$2 = 21845
(gdb) p &d
$3 = (int (*)[5]) [34m0x7fffffffdee0[m
(gdb) p &s
$4 = (int *) [34m0x7fffffffdedc[m
(gdb) s
[33mSum[m ([36mp[m=0x10000ffff, [36mk[m=0) at [32ms15f.cpp[m:4
4	{
(gdb) list
1	#include "hw06.h"
2	
3	int Sum(int *p, int k)
4	{
5	  int i;
6	  int sum = 0;
7	  for (i = 0; i < k; ++i)
8	  {
9	    sum += *(p + i);
10	  }
(gdb) b 4
Breakpoint 3 at [34m0x5555555552f4[m: file [32ms15f.cpp[m, line 4.
(gdb) s
6	  int sum = 0;
(gdb) s
7	  for (i = 0; i < k; ++i)
(gdb) p i
$5 = 1431655329
(gdb) p &i
$6 = (int *) [34m0x7fffffffdeb8[m
(gdb) p p
$7 = (int *) [34m0x7fffffffdee0[m
(gdb) p &kl[K
$8 = (int *) [34m0x7fffffffdea4[m
(gdb) p k
$9 = 5
(gdb) p sum
$10 = 0
(gdb) s
9	    sum += *(p + i);
(gdb) s
7	  for (i = 0; i < k; ++i)
(gdb) p sum
$11 = 1
(gdb) p &sum
$12 = (int *) [34m0x7fffffffdebc[m
(gdb) s
9	    sum += *(p + i);
(gdb) s
7	  for (i = 0; i < k; ++i)
(gdb) p sum
$13 = 3
(gdb) s
9	    sum += *(p + i);
(gdb) s
7	  for (i = 0; i < k; ++i)
(gdb) p sum
$14 = 6
(gdb) s
9	    sum += *(p + i);
(gdb) s
7	  for (i = 0; i < k; ++i)
(gdb) p sum
$15 = 10
(gdb) s
9	    sum += *(p + i);
(gdb) s
7	  for (i = 0; i < k; ++i)
(gdb) p sum
$16 = 15
(gdb) s
11	  return sum;
(gdb) s
12	}
(gdb) s
[33mmain[m () at [32ms15.cpp[m:9
9	  std::cout << "s: " << s << std::endl;
(gdb) p s
$17 = 15
(gdb) s
s: 15
10	  return 0;
(gdb) quit
A debugging session is active.

	Inferior 1 [process 35232] will be killed.

Quit anyway? (y or n) y
]0;reaper@REAPER: ~/CS1B/06/s15[01;32mreaper@REAPER[00m:[01;34m~/CS1B/06/s15[00m$ xi[K[Kexit
exit

Script done on 2020-10-22 19:49:33-07:00 [COMMAND_EXIT_CODE="0"]
